import{r as n,o as a,c as s,b as t,d as e,a as p}from"./app.55341128.js";const o='{"title":"Introduction","description":"","frontmatter":{},"headers":[{"level":2,"title":"DEMO","slug":"demo"},{"level":2,"title":"Release Notes","slug":"release-notes"},{"level":2,"title":"Getting Started","slug":"getting-started"},{"level":2,"title":"CDN","slug":"cdn"},{"level":2,"title":"npm","slug":"npm"},{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"⚡️ Advanced","slug":"advanced"}],"relativePath":"guide.md","lastUpdated":1613005313605}',c={},l=t("h1",{id:"introduction"},[t("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),e(" Introduction")],-1),i=t("p",null,[e("Directly call file select dialog from JavaScript. Get Back Promise File or FileList object. No more hacky hiding of "),t("code",null,'<input type="file">'),e(" elements.")],-1),u=t("h2",{id:"demo"},[t("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#"),e(" DEMO")],-1),r=p('<h2 id="release-notes"><a class="header-anchor" href="#release-notes" aria-hidden="true">#</a> Release Notes</h2><p>Latest version: <img src="https://img.shields.io/npm/v/file-select-dialog" alt="npm"></p><p>Detailed release notes for each version are available on <a href="https://github.com/TomokiMiyauci/file-select-dialog/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><h2 id="getting-started"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h2><p>There are two primary ways of adding file-select-dialog to a project:</p><ul><li>Import it as a CDN package on the page</li><li>Install it using npm</li></ul><h2 id="cdn"><a class="header-anchor" href="#cdn" aria-hidden="true">#</a> CDN</h2><p>For prototyping or learning purposes, you can use the latest version with:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/file-select-dialog<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">function</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fileList <span class="token operator">=</span> fileSelectDialog<span class="token punctuation">.</span><span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClick()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="npm"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h2><p>with Yarn</p><div class="language-bash"><pre><code><span class="token function">yarn</span> <span class="token function">add</span> file-select-dialog\n</code></pre></div><p>with NPM</p><div class="language-bash"><pre><code><span class="token function">npm</span> i file-select-dialog\n</code></pre></div><p>This module has no default export. It has a simple function.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> fileDialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;file-select-dialog&#39;</span>\n</code></pre></div><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>By default can only select a single file and get a <code>FileList</code> object.</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// open file select dialog and waiting user selection then return FileList object.</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>If the <code>multiple</code> parameter is <code>true</code>, can select multiple files and get a <code>FileList</code> object.</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> multiple<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>The <code>accept</code> parameter limit the selecable file types.</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> accept<span class="token operator">:</span> <span class="token string">&#39;.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// multiple acceptable types</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.pdf&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="advanced"><a class="header-anchor" href="#advanced" aria-hidden="true">#</a> ⚡️ Advanced</h3><p>If the parameter of <code>multiple</code> is <code>false</code> and <code>strict</code> is <code>true</code>, can get <code>File</code> object directly. Your editor suggest <code>File</code> object types.</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> strict<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// Equal as below</span>\n  <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fileList<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> fileList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',26);c.render=function(e,p,o,c,k,d){const g=n("playground");return a(),s("div",null,[l,i,u,t(g),r])};export default c;export{o as __pageData};

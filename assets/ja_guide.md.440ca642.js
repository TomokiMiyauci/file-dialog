import{r as n,o as s,c as a,b as t,d as p,a as o}from"./app.55341128.js";const e='{"title":"はじめに","description":"","frontmatter":{},"headers":[{"level":2,"title":"デモ","slug":"デモ"},{"level":2,"title":"リリースノート","slug":"リリースノート"},{"level":2,"title":"導入する","slug":"導入する"},{"level":2,"title":"CDN","slug":"cdn"},{"level":2,"title":"npm","slug":"npm"},{"level":2,"title":"使い方","slug":"使い方"},{"level":3,"title":"⚡️ 高度な使い方","slug":"高度な使い方"}],"relativePath":"ja/guide.md","lastUpdated":1613005313605}',c={},l=t("h1",{id:"はじめに"},[t("a",{class:"header-anchor",href:"#はじめに","aria-hidden":"true"},"#"),p(" はじめに")],-1),i=t("p",null,[p("JavaScript からファイル選択ダイアログを直接呼び出します。 Promise で"),t("code",null,"File"),p("または"),t("code",null,"FileList"),p("オブジェクトを取得します。 "),t("code",null,'<inputtype =" file ">'),p("ハックはもう必要ありません。")],-1),u=t("h2",{id:"デモ"},[t("a",{class:"header-anchor",href:"#デモ","aria-hidden":"true"},"#"),p(" デモ")],-1),k=o('<h2 id="リリースノート"><a class="header-anchor" href="#リリースノート" aria-hidden="true">#</a> リリースノート</h2><p>最新バージョン: <img src="https://img.shields.io/npm/v/file-select-dialog" alt="npm"></p><p>各バージョンの詳細なリリースノートは、<a href="https://github.com/TomokiMiyauci/file-select-dialog/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">GitHub</a>で確認できます。</p><h2 id="導入する"><a class="header-anchor" href="#導入する" aria-hidden="true">#</a> 導入する</h2><p>file-select-dialog をプロジェクトに追加するには、2 つの方法があります。</p><ul><li>CDN を通じて パッケージをインポートします。</li><li>npm を使用してインストールします。</li></ul><h2 id="cdn"><a class="header-anchor" href="#cdn" aria-hidden="true">#</a> CDN</h2><p>プロトタイピングなどの目的で、次の最新バージョンを使用できます。</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/file-select-dialog<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">function</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fileList <span class="token operator">=</span> fileSelectDialog<span class="token punctuation">.</span><span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClick()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="npm"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h2><p>with Yarn</p><div class="language-bash"><pre><code><span class="token function">yarn</span> <span class="token function">add</span> file-select-dialog\n</code></pre></div><p>with NPM</p><div class="language-bash"><pre><code><span class="token function">npm</span> i file-select-dialog\n</code></pre></div><p>このモジュールにはデフォルトのエクスポートはありません。関数はひとつだけ公開されています。</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> fileDialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;file-select-dialog&#39;</span>\n</code></pre></div><h2 id="使い方"><a class="header-anchor" href="#使い方" aria-hidden="true">#</a> 使い方</h2><p>デフォルトでは、単一のファイルのみの選択に制限して<code>FileList</code>オブジェクトを取得できます。</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ファイル選択ダイアログを開き、ユーザーの選択を待ってから、FileListオブジェクトを返します。</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>multiple</code>パラメータが<code>true</code>の場合、複数のファイル選択を許容し、<code>FileList</code>オブジェクトを取得できます。</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> multiple<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>accept</code>パラメータは、選択可能なファイルタイプを制限します。</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> accept<span class="token operator">:</span> <span class="token string">&#39;.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 複数のファイルタイプ</span>\n  <span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.pdf&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="高度な使い方"><a class="header-anchor" href="#高度な使い方" aria-hidden="true">#</a> ⚡️ 高度な使い方</h3><p><code>multiple</code>のパラメータが<code>falseで</code>、<code>strict</code>が<code>true</code>の場合、<code>File</code>オブジェクトを直接取得できます。 エディタは<code>File</code>オブジェクトを推論します。</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">onClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> strict<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 以下と等価</span>\n  <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fileList<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> fileList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',26);c.render=function(p,o,e,c,r,d){const g=n("playground");return s(),a("div",null,[l,i,u,t(g),k])};export default c;export{e as __pageData};

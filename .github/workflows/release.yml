name: release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'example/**'
      - 'docs/**'

jobs:
  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive

  lint:
    needs: setup
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Lint
        run: yarn lint

  test-unit:
    needs: setup
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Test unit
        run: yarn test:unit --ci --coverage

      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

  codecov:
    needs: test-unit
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: coverage
          path: coverage

      - uses: codecov/codecov-action@v1
        with:
          file: coverage/clover.xml
          fail_ci_if_error: true

  release:
    needs: [lint, test-unit]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: release
        run: yarn semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  # build-docs:
  #   needs: [setup]
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       node: [14]

  #   steps:
  #     - uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: ${{ matrix.node }}

  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Restore node_modules
  #       id: node_modules_cache_id
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

  #     - name: Build docs
  #       run: yarn typedoc --out docs src

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: docs
  #         path: docs

  # release-docs:
  #   needs: [release, build-docs]
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: docs
  #         path: docs

  #     - name: Deploy
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: docs
